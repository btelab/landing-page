export const Footer = () => import('../..\\..\\..\\components\\Footer.vue' /* webpackChunkName: "components/footer" */).then(c => wrapFunctional(c.default || c))
export const FooterBlank = () => import('../..\\..\\..\\components\\FooterBlank.vue' /* webpackChunkName: "components/footer-blank" */).then(c => wrapFunctional(c.default || c))
export const MainBanner = () => import('../..\\..\\..\\components\\MainBanner.vue' /* webpackChunkName: "components/main-banner" */).then(c => wrapFunctional(c.default || c))
export const Nav = () => import('../..\\..\\..\\components\\Nav.vue' /* webpackChunkName: "components/nav" */).then(c => wrapFunctional(c.default || c))
export const NuxtLogo = () => import('../..\\..\\..\\components\\NuxtLogo.vue' /* webpackChunkName: "components/nuxt-logo" */).then(c => wrapFunctional(c.default || c))
export const UnderContruction = () => import('../..\\..\\..\\components\\UnderContruction.vue' /* webpackChunkName: "components/under-contruction" */).then(c => wrapFunctional(c.default || c))
export const Awards = () => import('../..\\..\\..\\components\\awards\\index.vue' /* webpackChunkName: "components/awards" */).then(c => wrapFunctional(c.default || c))
export const About = () => import('../..\\..\\..\\components\\about\\index.vue' /* webpackChunkName: "components/about" */).then(c => wrapFunctional(c.default || c))
export const ContactForm = () => import('../..\\..\\..\\components\\contactForm\\index.vue' /* webpackChunkName: "components/contact-form" */).then(c => wrapFunctional(c.default || c))
export const Blog = () => import('../..\\..\\..\\components\\blog\\index.vue' /* webpackChunkName: "components/blog" */).then(c => wrapFunctional(c.default || c))
export const HospitalBanner = () => import('../..\\..\\..\\components\\hospitalBanner\\index.vue' /* webpackChunkName: "components/hospital-banner" */).then(c => wrapFunctional(c.default || c))
export const Map = () => import('../..\\..\\..\\components\\map\\index.vue' /* webpackChunkName: "components/map" */).then(c => wrapFunctional(c.default || c))
export const Instagram = () => import('../..\\..\\..\\components\\instagram\\index.vue' /* webpackChunkName: "components/instagram" */).then(c => wrapFunctional(c.default || c))
export const Projects = () => import('../..\\..\\..\\components\\projects\\index.vue' /* webpackChunkName: "components/projects" */).then(c => wrapFunctional(c.default || c))
export const Research = () => import('../..\\..\\..\\components\\research\\index.vue' /* webpackChunkName: "components/research" */).then(c => wrapFunctional(c.default || c))
export const Publications = () => import('../..\\..\\..\\components\\publications\\index.vue' /* webpackChunkName: "components/publications" */).then(c => wrapFunctional(c.default || c))
export const ResearchMain = () => import('../..\\..\\..\\components\\researchMain\\index.vue' /* webpackChunkName: "components/research-main" */).then(c => wrapFunctional(c.default || c))
export const ResearchSectionsBioprinting = () => import('../..\\..\\..\\components\\researchSections\\bioprinting.vue' /* webpackChunkName: "components/research-sections-bioprinting" */).then(c => wrapFunctional(c.default || c))
export const Team = () => import('../..\\..\\..\\components\\team\\index.vue' /* webpackChunkName: "components/team" */).then(c => wrapFunctional(c.default || c))
export const Title = () => import('../..\\..\\..\\components\\title\\index.vue' /* webpackChunkName: "components/title" */).then(c => wrapFunctional(c.default || c))

// nuxt/nuxt.js#8607
function wrapFunctional(options) {
  if (!options || !options.functional) {
    return options
  }

  const propKeys = Array.isArray(options.props) ? options.props : Object.keys(options.props || {})

  return {
    render(h) {
      const attrs = {}
      const props = {}

      for (const key in this.$attrs) {
        if (propKeys.includes(key)) {
          props[key] = this.$attrs[key]
        } else {
          attrs[key] = this.$attrs[key]
        }
      }

      return h(options, {
        on: this.$listeners,
        attrs,
        props,
        scopedSlots: this.$scopedSlots,
      }, this.$slots.default)
    }
  }
}
